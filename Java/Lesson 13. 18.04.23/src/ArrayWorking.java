import java.util.Arrays;

public class ArrayWorking {
    /**
     * В качестве счетчика можем подтягивать абсолютно любую интовую переменную.
     */
    int [] arr = new int[10]; // объявляем новый массив, выделяем под него память.
    int count = 0; // переменная для счета элементов в массиве
    int[] temp = arr;

    /**
     * Метод для поиска элемента
     * @param value искомое значение
     * @return индекс элемента
     */
    public int find(int value){
        for (int i = 0; i < count; i++) {           // итерируем массив
            if(value == arr[i]){                    // проверяем, совпадает ли элемент массива с искомым значением
                return i;                           // если да, возвращаем индекс
            }
        }
        System.out.println("Элемента нет");         // если нет, выводим сообщение и возвращаем индекс равный -1
        return -1;
    }
    /**
     * Метод для вставки значения в массив
     * @param value - само значение
     *
     *  + ДИНАМИЧЕСКОЕ ВЫДЕЛЕНИЕ ПАМЯТИ
     */
    public void insert(int value){
        if (count >= 0.8*arr.length)    // если длина массива больше, чем 80% от его памяти, то...

            arr = new int[2* arr.length]; // памяти в 2 раза больше
        copy(temp);
        arr[count] = value;            // Вставляем элемент в свободную ячейку массива
        count++;                       // Увеличиваем счетчик элементов в массиве
    }

    private void copy(int[] temp){
        for (int i = 0; i < count; i++) {
            arr[i] = temp[i];
        }
    }

    /**
     * Метод для удаления элемента из массива
     * @param pos индекс удаляемого элемента
     */
    public void delete(int pos){
        if(pos >= count){                                           // Проверяем, если идекс удаляемого элемента за пределами массива,
            System.out.println("Нет элемента по этому индексу");    // прекращаем исполнение и выводи сообщение в консоль
            return;
        }
        for (int i = pos; i < count ; i++) {                       // Проходим массив циклом(итерируем) от индекса удаления
            arr[i] = arr[i+1];                                    // Присваиваем каждому элементу значение соседнего
        }
        count--;                                                  // сокращаем счетчик на 1 (декрементируем)
    }

    /**
     * Сортировка пузырьком
     * создаем временную переменную темп
     * создаем вложенные циклы для сравнения каждого эл массива с каждым
     *
     */
    public void sort(){
        int temp;
        for (int i = 0; i < count; i++) {           //Перебор массива
            for (int j = 0; j < count; j++) {       // Перебор массива и сравнение каждого эл с каждым
                if (arr[i] > arr[j]){
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
    }
    public void clear(){
    count = 0;
    }
    public void hack(){
        count = arr.length;
    }
    public void erase(){
        for (int i = 0; i < count; i++) {
            count++;
        }
        count = 0;
    }
    /**
     * Метод для перевода значений в строку
     * @return возвращает строчное представление массива
     * сначала ручная реализация (с циклом), затем то, что создала среда с хоткеем
     */

    @Override
    public String toString() {
        String str = " ";                     // Создаем строку
        for (int i = 0; i < count; i++) {     // Создаем цикл для пербора уже вставленных элементов
            str +=  arr[i] + " ";             // Прибавляем уже вставленный элемент к строке
        }
        return str;
    }
}
